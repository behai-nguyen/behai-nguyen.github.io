---
layout: post
title: "JavaScript: preserving JSON data order on the client-side."
description: I have some JSON data generated on the server-side, in some desired order, but when it gets to the browsers, the order changed. This post shows how I get around this problem. 

tags:
- JavaScript
- JSON
- data 
- order
---

* I have some JSON data generated on the server-side, in some desired order, but when it gets to the browsers, the order changed. This post shows how I get around this problem.*

| ![062-feature-image.png](https://behainguyen.files.wordpress.com/2023/04/062-feature-image.png)
|:--:|
| *JavaScript: preserving JSON data order on the client-side.* |

I have been working with <code>JSON</code> for a fair while, but this was the first time I came across this problem. To illustrate, the following screen capture shows the <code>JSON</code> generated by the server:

![062-01.png](https://behainguyen.files.wordpress.com/2023/04/062-01.png)

And the following screen image shows how it arrives at a browser:

![062-02.png](https://behainguyen.files.wordpress.com/2023/04/062-02.png)

<code>JavaScript</code> reorders the data. It turns out this is a well known problem, for example, <a href="https://stackoverflow.com/questions/23966722/json-object-being-reordered-by-javascript" title="JSON object being reordered by Javascript" target="_blank">JSON object being reordered by Javascript</a> -- and elsewhere which I am not going to list.

The general consensus seems to assign each data object to a key which we know will maintain their order alpha-numerically. I know that there are only a handful of fields within each <code>JSON</code>: keys in format <code>field01</code> to <code>field99</code> are more than adequate. Accordingly, at the server-side, I changed the <code>JSON</code> to:

![062-03.png](https://behainguyen.files.wordpress.com/2023/04/062-03.png)

Now the data arrives in the order set out by the server:

![062-04.png](https://behainguyen.files.wordpress.com/2023/04/062-04.png)

The <code>JavaScript</code> to extract the data out will be more complicated, I had to add another additional <code>for loop</code>. The server code, increased a little, too. The penalty we have to pay.

This was a new problem for me. I was not aware of it. So I thought I would just share my experience. I hope you find this post useful. Thank you for reading and stay safe as always.

✿✿✿

Feature image sources:

<ul>
<li>
<a href="https://in.pinterest.com/pin/337277459600111737/" target="_blank">https://in.pinterest.com/pin/337277459600111737/</a>
</li>
<li>
<a href="https://www.omgubuntu.co.uk/2022/09/ubuntu-2210-kinetic-kudu-default-wallpaper" target="_blank">https://www.omgubuntu.co.uk/2022/09/ubuntu-2210-kinetic-kudu-default-wallpaper</a>
</li>
<li>
<a href="https://www.flaticon.com/free-icon/json_617570" target="_blank">https://www.flaticon.com/free-icon/json_617570</a>
</li>
</ul>